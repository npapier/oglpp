#summary GLE - Open(GL) (E)xtension library

= Introduction =

*gle*, a shortcut for Open(GL) (E)xtension library, provides all OpenGL extensions to C++ developers. 

= Features =

  * Core functions up to OpenGL version 3.0 and extensions from OpenGL [http://www.opengl.org/registry/ registry]

  * Documentation generated by doxygen grouping extensions by vendor, by name and by OpenGL version with link to official specification.

  * Display info about the current OpenGL rendered and extensions during initialization.

  * Cross-platform (GNU/Linux, MS/Windows and Apple/MacOSX).

  * Automatically generated from OpenGL header files (glext.h) and the [http://www.opengl.org/registry/ registry] website.

= Details =

gle detects, at run-time, whether OpenGL extensions are supported or not by the driver. gle initializes them and provides entry points to be able to use it easily.

= Usage =
{{{
//#include <gle/gle.h>
#include <gle/Wrapper.hpp>
#include <gle/WrapperGen.hpp>
#include <gle/OpenGLExtensionsGen.hpp>

// gle main object to be able to access OpenGL extensions.
gle::OpenGLExtensionsGen gleContext;
// Initializes gle
gleContext.clear();
gleContext.initialize();

// Sets it current
gleSetCurrent( gleContext );

// Checks OpenGL requirements for vgsdk
if ( gleContext.isGL_VERSION_3_0 )
{
  // OpenGL 3.0 is available
  ...
}

// Checks availability of GL_ARB_shader_objects
if ( isGL_ARB_shader_objects() )
{
  GLhandleARB programObject = glCreateProgramObjectARB();
  ...
}
}}}

= License ==

gle is distributed under [http://www.gnu.org/licenses/lgpl.html GNU LGPL] license, which can be found in files COPYING and COPYING.LESSER. This license allows you to use gle freely in commercial programs as long as you link with the dynamic library.